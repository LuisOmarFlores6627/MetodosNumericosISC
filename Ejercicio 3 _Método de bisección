package ejercicio3;

import java.util.function.Function;

public class Ejercicio3 {
    public static void main(String[] args) {
        Function<Double, Double> function =  x ->  Math.pow(x, 3) - 2 * x - 5;  

        double a = 0; // Límite inferior 
        double b = 3; // Límite superior

        // Definir la precisión deseada
        double epsilon = 0.0001;
        
        double root = bisection(function, a, b, epsilon);

        System.out.println("La raíz aproximada es: " + root);
    }

    public static double bisection(Function<Double, Double> function, double a, double b, double epsilon) {
        // Verificar si los límites del intervalo encierran una raíz
        if (function.apply(a) * function.apply(b) > 0) {
            throw new IllegalArgumentException("La función no cambia de signo en el intervalo dado.");
        }
        
        while ((b - a) >= epsilon) {
            // Encontrar el punto medio del intervalo
            double c = (a + b) / 2;
            // Calcular el valor de la función en el punto medio
            double fc = function.apply(c);
            // Si el valor de la función en el punto medio es cercano a cero, hemos encontrado una buena aproximación
            if (Math.abs(fc) < epsilon) {
                return c; // Devolver la raíz aproximada
            }
            // Actualizar los límites del intervalo [a, b] según el cambio de signo
            if (fc * function.apply(a) < 0) {
                b = c; // Si hay cambio de signo entre a y c, actualizar b
            } else {
                a = c; // Si hay cambio de signo entre b y c, actualizar a
            }
        }
        // Devolver el punto medio del intervalo como la mejor aproximación encontrada
        return (a + b) / 2;
    }
}

